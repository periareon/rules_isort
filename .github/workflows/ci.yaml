---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

env:
  BAZEL_STARTUP_FLAGS: --bazelrc=${{ github.workspace }}/.github/github.bazelrc

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-20.04
          - os: windows-2019
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Setup Bazelrc (Windows)
        run: |
          echo "startup --output_user_root=C:/bzl" > ./user.bazelrc
        if: startswith(runner.os, 'Windows')
      - name: Setup Bazelrc
        run: |
          echo "common --keep_going" >> ./user.bazelrc

      # Build and Test the code
      - name: Test (Unix)
        run: bazel ${BAZEL_STARTUP_FLAGS[@]} test //...
        if: startswith(runner.os, 'Windows') != true
      - name: Test (Windows)
        run: bazel $env:BAZEL_STARTUP_FLAGS test //...
        if: startswith(runner.os, 'Windows')


  ci-aspects:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-20.04
          - os: windows-2019
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Setup Bazelrc (Windows)
        run: |
          echo "startup --output_user_root=C:/bzl" > ./user.bazelrc
        if: startswith(runner.os, 'Windows')
      - name: Setup Bazelrc
        run: |
          echo "common --config=strict" >> ./user.bazelrc
          echo "common --keep_going" >> ./user.bazelrc

      # Build and Test the code
      - name: Test (Unix)
        run: bazel ${BAZEL_STARTUP_FLAGS[@]} test //...
        if: startswith(runner.os, 'Windows') != true
      - name: Test (Windows)
        run: bazel $env:BAZEL_STARTUP_FLAGS test //...
        if: startswith(runner.os, 'Windows')

  ci-buildifier:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4
      - name: Buildifier
        run: |
          wget "https://github.com/bazelbuild/buildtools/releases/download/v${BUILDIFIER_VERSION}/buildifier-linux-amd64" -O buildifier
          chmod +x ./buildifier
          ./buildifier -lint=warn -mode=check -warnings=all -r ${{ github.workspace }}
          rm ./buildifier
        env:
          BUILDIFIER_VERSION: 8.0.2

  ci-lint-and-format:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Setup pip
        run: |
          python -m pip install --upgrade pip setuptools
      - name: Install dependencies
        run: |
          pip install -r python/isort/private/tests/test_requirements_linux.txt --user
      - name: Run pylint
        run: |
          PYTHONPATH="$(pwd)" python -m pylint python
      - name: Run mypy
        run: |
          python -m mypy python
      - name: Run black
        run: |
          python -m black --check --diff python
